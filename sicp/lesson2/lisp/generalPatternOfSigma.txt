general pattern of ∑:
通用模式(线性递归模型):
(define (sum term a next b)
    (if (> a b) 0
        (+  (term a)
            (sum term (next a) next b))))

通用模式(线性迭代模型):
(define (sum term a next b result)
    (if (> a b) result
        (sum term
             (next a)
             next
             b
             (+ result (term a)))))
优化后:
(define (sum term a next b)
    (define (sum term a next b result)
        (if (> a b) result
            (sum term
                 (next a)
                 next
                 b
                 (+ result (term a)))))
    (sum term a next b 0))

具体验证如下:=========================================
case1: 求 i∈[a, b], i的和
(define (sum-int a b)
    (define (identity x) x)
    (sum identity a 1+ b))

case2: 求 i∈[a, b], i²的和
(define (square x) (* x x))
(define (sum-sq a b)
    (sum square a 1+ b))

case3: 求π/8
(define (pi-sum a b)
    (sum    (lambda (i) (/ 1 (* i (+ i 2))))
            a
            (lambda (i) (+ i 4))
            b))